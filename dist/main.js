(()=>{"use strict";var e={960:(e,n,t)=>{t.d(n,{Z:()=>A});var a=t(537),r=t.n(a),i=t(645),o=t.n(i),c=t(667),s=t.n(c),l=new URL(t(921),t.b),d=o()(r()),u=s()(l);d.push([e.id,'body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    width: 100vw;\n    display: flex;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nh1 {\n    font-size: 2.5em;\n    font-family: "Permanent Marker", sans-serif;\n}\n\n\n.sidebar {\n    background-image: url('+u+");\n    background-size: cover;\n    width: 27%;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n}\n\n.content-body {\n    width: 73%;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    overflow: auto;\n}\n\n.header {\n    text-align: center;\n    background-color: black;\n    color: white;\n}\n\n.navbar {\n    display: flex;\n    gap: 1em;\n    margin-bottom: 0;\n    justify-content: center;\n}\n\n.nav-btn {\n    font-size: 1em;\n    height: 5em;\n    background-color: black;\n    color: white;\n    padding: 1.5em;\n    padding-bottom: 0;\n    border: none;\n    cursor: pointer;\n}\n\n.nav-btn img {\n    height: 6em;\n    width: auto;\n    padding: 0;\n    margin: 0;\n    float: left;\n    position: relative;\n    bottom: 3em;\n    visibility: hidden;\n}\n\n.nav-btn:hover {\n    text-decoration: underline;\n}\n\n.navbar .active img {\n    visibility: visible;\n}\n\n.main-content {\n    padding: 10em;\n    padding-top: 2em;\n    background-color: rgb(235, 225, 225);\n}\n\nh2 {\n    text-align: center;\n}\n\n.main-content img {\n    display: block;\n    margin: auto;\n    width: 40%;\n    height: auto;\n    padding: 2.5em;\n}\n","",{version:3,sources:["webpack://./src/static/styles.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;IACV,iBAAiB;IACjB,YAAY;IACZ,aAAa;IACb,gDAAgD;AACpD;;AAEA;IACI,gBAAgB;IAChB,2CAA2C;AAC/C;;;AAGA;IACI,yDAAwC;IACxC,sBAAsB;IACtB,UAAU;IACV,aAAa;IACb,SAAS;IACT,UAAU;AACd;;AAEA;IACI,UAAU;IACV,aAAa;IACb,sBAAsB;IACtB,aAAa;IACb,cAAc;AAClB;;AAEA;IACI,kBAAkB;IAClB,uBAAuB;IACvB,YAAY;AAChB;;AAEA;IACI,aAAa;IACb,QAAQ;IACR,gBAAgB;IAChB,uBAAuB;AAC3B;;AAEA;IACI,cAAc;IACd,WAAW;IACX,uBAAuB;IACvB,YAAY;IACZ,cAAc;IACd,iBAAiB;IACjB,YAAY;IACZ,eAAe;AACnB;;AAEA;IACI,WAAW;IACX,WAAW;IACX,UAAU;IACV,SAAS;IACT,WAAW;IACX,kBAAkB;IAClB,WAAW;IACX,kBAAkB;AACtB;;AAEA;IACI,0BAA0B;AAC9B;;AAEA;IACI,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,gBAAgB;IAChB,oCAAoC;AACxC;;AAEA;IACI,kBAAkB;AACtB;;AAEA;IACI,cAAc;IACd,YAAY;IACZ,UAAU;IACV,YAAY;IACZ,cAAc;AAClB",sourcesContent:['body {\n    margin: 0;\n    padding: 0;\n    min-height: 100vh;\n    width: 100vw;\n    display: flex;\n    font-family: Verdana, Geneva, Tahoma, sans-serif;\n}\n\nh1 {\n    font-size: 2.5em;\n    font-family: "Permanent Marker", sans-serif;\n}\n\n\n.sidebar {\n    background-image: url("img/sidebar.png");\n    background-size: cover;\n    width: 27%;\n    height: 100vh;\n    margin: 0;\n    padding: 0;\n}\n\n.content-body {\n    width: 73%;\n    display: flex;\n    flex-direction: column;\n    height: 100vh;\n    overflow: auto;\n}\n\n.header {\n    text-align: center;\n    background-color: black;\n    color: white;\n}\n\n.navbar {\n    display: flex;\n    gap: 1em;\n    margin-bottom: 0;\n    justify-content: center;\n}\n\n.nav-btn {\n    font-size: 1em;\n    height: 5em;\n    background-color: black;\n    color: white;\n    padding: 1.5em;\n    padding-bottom: 0;\n    border: none;\n    cursor: pointer;\n}\n\n.nav-btn img {\n    height: 6em;\n    width: auto;\n    padding: 0;\n    margin: 0;\n    float: left;\n    position: relative;\n    bottom: 3em;\n    visibility: hidden;\n}\n\n.nav-btn:hover {\n    text-decoration: underline;\n}\n\n.navbar .active img {\n    visibility: visible;\n}\n\n.main-content {\n    padding: 10em;\n    padding-top: 2em;\n    background-color: rgb(235, 225, 225);\n}\n\nh2 {\n    text-align: center;\n}\n\n.main-content img {\n    display: block;\n    margin: auto;\n    width: 40%;\n    height: auto;\n    padding: 2.5em;\n}\n'],sourceRoot:""}]);const A=d},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",a=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),a&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),a&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,a,r,i){"string"==typeof e&&(e=[[null,e,void 0]]);var o={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(o[s]=!0)}for(var l=0;l<e.length;l++){var d=[].concat(e[l]);a&&o[d[0]]||(void 0!==i&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=i),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),n.push(d))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),i="/*# ".concat(r," */"),o=t.sources.map((function(e){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(e," */")}));return[n].concat(o).concat([i]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,a=0;a<n.length;a++)if(n[a].identifier===e){t=a;break}return t}function a(e,a){for(var i={},o=[],c=0;c<e.length;c++){var s=e[c],l=a.base?s[0]+a.base:s[0],d=i[l]||0,u="".concat(l," ").concat(d);i[l]=d+1;var A=t(u),p={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==A)n[A].references++,n[A].updater(p);else{var m=r(p,a);a.byIndex=c,n.splice(c,0,{identifier:u,updater:m,references:1})}o.push(u)}return o}function r(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,r){var i=a(e=e||[],r=r||{});return function(e){e=e||[];for(var o=0;o<i.length;o++){var c=t(i[o]);n[c].references--}for(var s=a(e,r),l=0;l<i.length;l++){var d=t(i[l]);0===n[d].references&&(n[d].updater(),n.splice(d,1))}i=s}}},569:e=>{var n={};e.exports=function(e,t){var a=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var i=t.sourceMap;i&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),n.styleTagTransform(a,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},921:(e,n,t)=>{e.exports=t.p+"img/sidebar.png"}},n={};function t(a){var r=n[a];if(void 0!==r)return r.exports;var i=n[a]={id:a,exports:{}};return e[a](i,i.exports,t),i.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var a in n)t.o(n,a)&&!t.o(e,a)&&Object.defineProperty(e,a,{enumerable:!0,get:n[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),t.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var a=n.getElementsByTagName("script");a.length&&(e=a[a.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var e={};t.r(e),t.d(e,{About:()=>c,Home:()=>i,Menu:()=>o,default:()=>s});const n=t.p+"img/pizza.jpg";const a=t.p+"img/pizza2.jpg";const r=t.p+"img/chef.jpg";const i={render:function(){return l("div",{classes:"home",children:[l("h2",{text:"Welcome to A Slice of Jazz!"}),l("img",{src:n,alt:"Picture of gourmet pizza"}),l("p",{text:"Like gourmet stone fired pizza? Like jazz music? Then you'll love A Slice of Jazz. Relaxing and sophisticated decor. Delicious pizza. Exceptional cocktails. Live music every weekend."}),l("p",{text:"Open 11AM to 11PM seven days a week."}),l("p",{text:"Reservations accepted, but not required, after 5PM. Call (555) 12-PIZZA."})]})}},o={render:function(){return l("div",{classes:"menu",children:[l("h2",{text:"Our Menu"}),l("img",{src:a,alt:"Picture of gourmet pizza"}),l("p",{text:'You\'ll love our unique and gourmet all-vegetarian pizzas. We use only the freshest ingredients, sourcing organic and local when possible. Each and every day we feature a new chef-designed pizza, which can be ordered in either a 10" personal size or a 15" shareable size.  Call ahead to ask about the featured pizza that day, or show up and be delightfully surprised.'}),l("h3",{text:"Recently Featured Pizzas"}),l("p",{text:"Margherita: Organic fresh tomato (Golden Rule Organics), fresh mozzarella made in Berkeley by Belfiore, mozzarella, garlic olive oil, fresh basil"}),l("p",{text:"Cremini mushroom, onion, Skyhill Farms goat cheese, mozzarella, garlic olive oil, oregano, Italian parsley"}),l("p",{text:"Organic Warren pear (The Peach Jamboree), caramelized onion, walnut, mozzarella, Dunbarton blue cheese, arugula, lemon vinaigrette"}),l("p",{text:"Fresh corn, onion, poblano chile, Valbreso feta cheese, mozzarella, garlic olive oil, cilantro, lime"})]})}},c={render:function(){return l("section",{classes:"about",children:[l("h2",{text:"About Us"}),l("img",{src:r,alt:"Picture of a happy chef in kitchen"}),l("p",{text:"Chef Mario has had a passion for pizza for as long as he can remember, and a passion for jazz since he first came across a recording of Chet Baker singing and playing the trumpet.  Combining them seemed like a dream come true.  What could be better than listening to great jazz while enjoying great pizza?  Maybe add in a cocktail and a few good friends.  Heaven."}),l("p",{text:"Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum."})]})}},s={Home:i,Menu:o,About:c},l=(e,{text:n,html:t,classes:a,children:r,src:i,alt:o,dataset:c})=>{const s=document.createElement(e);return n?s.innerText=n:t&&(s.innerHTML=n),Array.isArray(a)?s.classList.add(...a):"string"==typeof a&&s.classList.add(a),Array.isArray(r)?r.forEach((e=>d(s,e))):r&&d(s,r),i&&(s.src=i),o&&(s.alt=o),c&&(s.dataset={...s.dataset,dataset:c}),s},d=(e,n)=>{e.appendChild("string"==typeof n?new Text(n):n)},u=(n="Home")=>{const t=document.querySelector(".main-content");t.innerHTML="",t.appendChild(e[n].render())},A=t.p+"img/saxman.png",p=(e="Home",n)=>{const t=["nav-btn",`${e.toLowerCase()}-btn`];return n&&t.push("active"),l("button",{classes:t,children:[l("img",{src:A}),e]})},m=()=>{const e=l("nav",{classes:"navbar",children:[p("Home",!0),p("Menu"),p("About")]});return e.addEventListener("click",(function({target:e}){e.classList.contains("active")||"BUTTON"!==e.tagName||([...e.parentElement.children].forEach((e=>{"BUTTON"===e.tagName&&e.classList.remove("active")})),e.classList.add("active"),u(e.innerText))})),e};t.p;var h=t(379),g=t.n(h),f=t(795),v=t.n(f),b=t(569),C=t.n(b),y=t(565),I=t.n(y),x=t(216),B=t.n(x),z=t(589),w=t.n(z),k=t(960),T={};T.styleTagTransform=w(),T.setAttributes=I(),T.insert=C().bind(null,"head"),T.domAPI=v(),T.insertStyleElement=B(),g()(k.Z,T),k.Z&&k.Z.locals&&k.Z.locals,((e,n=[])=>{n.forEach((n=>d(e,n)))})(document.body,[l("div",{classes:"sidebar"}),l("div",{classes:"content-body",children:[l("header",{classes:"header",children:[l("div",{classes:"logo",children:[l("h1",{text:"A Slice of Jazz"})]}),m()]}),l("main",{classes:"main-content"})]})]),u()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,